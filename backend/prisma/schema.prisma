generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Buyer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  name      String
  email     String   @unique
  address   String
  phoneNum  String
  province  String
  district  String
  area      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //@@map("buyers") // Use the collection name from MongoDB if it's different from the model name
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  storeId     String   @db.ObjectId
  searchCount Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Order {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  payId      String
  storeIds   String[] @db.ObjectId
  buyerId    String   @db.ObjectId
  productIds String[] @db.ObjectId
  price      Int
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  //@@map("orders") // Mapping to the MongoDB 'orders' collection
}


model Product {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId // Use MongoDB's ObjectId as the primary key
  storeId       String
  name          String
  description   String
  price         Int
  discount      Int
  categoryId    String
  mainCategory  String
  imageUrls     Json
  clickCount    Int      @default(0)
  isDisplay     Boolean  @default(true)
  orderCount    Int      @default(0)
  availableCount Int     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  orderIds      String[]
}


model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  payId      String
  productId  String   @db.ObjectId
  storeId    String   @db.ObjectId
  buyerId    String   @db.ObjectId
  rating     Int
  comment    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  //@@map("reviews") // Mapping to the MongoDB 'reviews' collection
}



model cart {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  productIds String[] @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  //@@map("wishlists") // Mapping to the MongoDB 'wishlists' collection
}
